[tool.poetry]
name = "template_sync"
version = "0.1.0"
description = ""
authors = ["Michał Gomoliński <michalgomol@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.7"
PyGitHub = "^1.58"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=2.6"

[tool.poetry.group.test.dependencies]
deepdiff = "^6.3"
httpretty = "^1.0"
pytest = "^7.1"
pytest-cov = "^4.0"
pytest-mock = "^3.9"
pytest-randomly = "^3.12"
pytest-xdist = { version = "^3.1", extras = ["psutil"] }

[tool.poetry.group.typing.dependencies]
mypy = ">=1.0"
types-jsonschema = ">=4.9.0"
types-requests = ">=2.28.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
template-sync = "template_sync.__main__:main"

[tool.ruff]
fix = true
unfixable = [
    "ERA", # do not autoremove commented out code
]
target-version = "py38"
line-length = 88
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
    "N818", #  Exception name should be named with an Error suffix
]
extend-exclude = [
    "docs/*",
    # External to the project's coding standards
    "tests/**/fixtures/*",
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2

[tool.ruff.per-file-ignores]
"src/poetry/console/*" = [
    "RUF012",
] # Can't annotate properly until new version of Cleo

[tool.black]
target-version = ['py38']
preview = true
force-exclude = '''
.*/setup\.py$
'''


[tool.mypy]
files = "src, tests"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]


[tool.pytest.ini_options]
addopts = "-n auto"
testpaths = ["tests"]


[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
